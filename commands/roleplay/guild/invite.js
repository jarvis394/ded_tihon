exports.run = async (api, update, args) => {
  const rel = '../../../'
  const handleError = require(rel + 'utils/handleError')
  const User = require(rel + 'lib/User')
  const Guild = require(rel + 'lib/Guild')
  const { firebase } = require(rel + 'variables')
  const db = firebase.firestore()
  
  try {
    
    if (!args[1] || (args[1] && !args[1].startsWith('[id'))) {
      return update.reply('üîª –£–ø–æ–º—è–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞')
    }
    
    const { senderId } = update
    const user = new User(senderId)
    const guildId = await user.fetchGuild()
    const guild = new Guild(guildId)
    const data = await guild.fetchData()
    const invId = args[1].split('|')[0].slice(3)
    const userRole = data.members.find(e => e.id === senderId)
    
    if (userRole < 2) {
      return update.reply('üîª –¢–æ–ª—å–∫–æ —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–æ–ª—Ö–æ–∑–æ–º –º–æ–≥—É—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –ª—é–¥–µ–π')
    }
    
    if (data.members.some(e => e.id === invId)) {
      return update.reply('üîª –≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–º –∫–æ–ª—Ö–æ–∑–µ!')
    }
    
    try {
      await api.messages.send({
        peer_id: invId,
        message: `‚úâÔ∏è –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–ª—Ö–æ–∑ "${data.name}" [ ${data.id} ]\n\n` + 
          `–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ @tihon_bot, –∫–æ–ª—Ö–æ–∑ –ø—Ä–∏–Ω—è—Ç—å ${data.id}`
      })
    } catch (e) {
      update.reply(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è. \n–û–Ω –≤—Å—ë —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ /–∫–æ–ª—Ö–æ–∑ –ø—Ä–∏–Ω—è—Ç—å ${guildId} \n` +
                          '–ü–æ–ø—Ä–æ—Å–∏—Ç–µ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ–Ω–∏—è–º –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –¥—Ä—É–∑—å—è.\n\n' +
                          `–û—à–∏–±–∫–∞: ${e.message}`)
    }
    
    await guild.addMember(invId, 0)
    
    return update.reply(`üì® ID ${invId} –±—ã–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –∫–æ–ª—Ö–æ–∑.`)
    
  } catch (e) {
    handleError(update, e)
  }
}

exports.command = {
  'hidden': true
}