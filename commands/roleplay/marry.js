exports.run = async (api, update, args) => {
  const handleError = require('../../utils/handleError')
  const User = require('../../lib/User')

  try {
    const { senderId } = update 
    const user = new User(senderId)

    // Check if someone is mentioned
    if (!args[0] || !args[0].startsWith('[id')) return update.reply('‚úñ –£–ø–æ–º—è–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞')

    // Get id of mentioned user
    const personId = args[0].slice(3).split('|')[0]

    // Check ids
    if (personId === user.id) return update.reply('‚úñ –ù–µ–ª—å–∑—è –ø–æ–∂–µ–Ω–∏—Ç—å—Å—è —Å —Å–∞–º–∏–º —Å–æ–±–æ–π! –§—É –Ω–∞—Ö—É–π!')

    // Initialize person
    const person = new User(personId)

    // Execute process
    const state = await user.marryWith(person)

    // Check if entry is already created
    if (state.exists) return update.reply('ü§î –¢—ã —É–∂–µ –∂–µ–Ω–∞—Ç —Å —ç—Ç–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º, –∑–∞–±—ã–ª?')

    // Get names
    const names = await api.users.get({ user_ids: `${user.id},${person.id}` })
    const userName = names[0].first_name
    const personName = names[1].first_name

    // Send reply back
    return update.reply(`üíï [id${senderId}|${userName}] –∏ [id${person.id}|${personName}] —Ç–µ–ø–µ—Ä—å –∂–µ–Ω–∞—Ç—ã!`)
  } catch (e) {
    handleError(update, e)
  }
}

exports.command = {
  name: 'marry',
  arguments: false,
  description: {
    en: 'Marry with someone',
    ru: '–ü–æ–∂–µ–Ω–∏—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º'
  },
  group: 'roleplay',
  alias: [
    '–±—Ä–∞–∫',
    '–∂–µ–Ω–∏—Ç—å–±–∞',
    '–ø–æ–∂–µ–Ω–∏—Ç—å—Å—è'
  ]
}
