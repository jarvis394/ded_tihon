exports.run = async (api, update, args) => {
  const handleError = require('../../utils/handleError')
  const User = require('../../lib/User')
  const {
    getGroupByName,
    getGroupByAccName,
    getGroupByTitle,
    getItemById
  } = require('../../utils/shop')

  try {
    const name = await api.users.get({
      user_ids: update.senderId
    })
    const user = new User(update.senderId)

    if (!args[0]) {
      return update.send('üòï –¢—ã –Ω–µ –≤–≤–µ–ª –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–µ–¥–º–µ—Ç')
    }

    if (args[0] && (!getGroupByAccName(args[0]) && !getGroupByTitle(args[0]) && !getGroupByName(args[0]))) {
      return update.send('üòï –¢—ã –≤–≤–µ–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É')
    }

    let groupName = args[0]
    let group = getGroupByAccName(groupName)

    if (!group) group = getGroupByName(groupName)
    if (!group) group = getGroupByTitle(groupName)

    let items = await user.fetchInventory()
    let id = items[group.title][0]
    let item = getItemById(id)

    if (!id) {
      return update.send('üßÆ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ')
    }

    if (!item) {
      return update.send('‚ùå –£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç')
    }

    user.add(item.price / 2)
    await user.subtractReputation(item.rep)
    await user.removeItem(group.title, 0)

    return update.send(
      `üéâ ${name[0].first_name} –ø—Ä–æ–¥–∞–ª –ø—Ä–µ–¥–º–µ—Ç ${item.name} –∑–∞ ${item.price /
        2}T`
    )
  } catch (e) {
    handleError(update, e)
  }
}

exports.command = {
  arguments: false,
  description: {
    en: 'Sells something from inventory',
    ru: '–ü—Ä–æ–¥–∞—ë—Ç —á—Ç–æ –Ω–∏–±—É–¥—å –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è'
  },
  alias: ['–ø—Ä–æ–¥–∞—Ç—å']
}
