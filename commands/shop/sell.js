exports.run = async (api, update, args) => {
  const { handleError } = require('../../utils')
  const User = require('../../lib/User')
  const data = require('../../shopData')

  try {
    let name = await api.users.get({
      user_ids: update.senderId
    })
    let user = new User(update.senderId)

    if (!args[0]) {
      return update.send('üòï –¢—ã –Ω–µ –≤–≤–µ–ª –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–µ–¥–º–µ—Ç')
    }

    if (
      args[0] &&
      (!data.getGroupByTitle(args[0]) && !data.getGroupByName(args[0]))
    ) {
      return update.send('üòï –¢—ã –≤–≤–µ–ª –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É')
    }

    if (!args[1]) {
      return update.send('üòï –¢—ã –Ω–µ –≤–≤–µ–ª –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å')
    }

    if (isNaN(args[1])) {
      return update.send('üòï –ù–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ - —ç—Ç–æ —á–∏—Å–ª–æ, –∑–Ω–∞–µ—à—å.')
    }

    let n = parseInt(args[1]) - 1
    let groupName = args[0]
    let group = data.getGroupByTitle(groupName)

    if (!group) group = data.getGroupByName(groupName)

    let items = await user.fetchInventory()
    let id = items[group.title][n]
    let item = data.getItemById(id)

    if (!id) {
      return update.send('üßÆ –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –ø–æ–¥ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º')
    }

    if (!item) {
      return update.send('‚ùå –£ —Ç–µ–±—è –µ—Å—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ–¥–º–µ—Ç')
    }

    user.add(item.price)
    await user.removeItem(group.title, n)

    return update.send(
      `üéâ ${name[0].first_name} –ø—Ä–æ–¥–∞–ª –ø—Ä–µ–¥–º–µ—Ç ${item.name} –∑–∞ ${item.price}T`
    )
  } catch (e) {
    handleError(update, e)
  }
}

exports.command = {
  arguments: false,
  description: {
    en: 'Sells something from inventory',
    ru: '–ü—Ä–æ–¥–∞—ë—Ç —á—Ç–æ –Ω–∏–±—É–¥—å –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è'
  },
  alias: ['–ø—Ä–æ–¥–∞—Ç—å']
}
