/* eslint-disable no-unused-vars */

const { handleError } = require("../../utils")
const data = require("../../shopData")
const coins = require("../../lib/Coins")

const aliases = {
  buy: [ "buy", "–∫—É–ø–∏—Ç—å", "–∫—É–ø–∏—Ç—Ç", "–∫—É–ø–ª—è", "–∫—É–ø–ª—á" ],
  sell: [ "sell", "–ø—Ä–æ–¥–∞—Ç—å", "–ø—Ä–æ–¥–∞—Ç", "–ø—Ä–æ–¥–∞—Ç–±", "–ø—Ä–æ–¥–∞–∂–∞" ]
}

let categories = {}
let paths = {}
for (let c in data) {
  const n = data[c]
  
  for (let i = 0; i < n.items.length; i++) {
    let g = n.items[i]
    categories[g.name.toLowerCase()] = { items: g.items, path: c, index: i }
  }
}

exports.run = async (api, update, args) => {
  try {
    
    if (!args[0]) return sendMenu()
    
    let option = args[0].toLowerCase()
    
    if (categories[option]) return sendCategory(option)
    if (aliases.buy.includes(option)) return sendBuyMenu()
    if (aliases.sell.includes(option)) return sendSellMenu()
    
    return update.send("üßê –û–ø—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    async function sendMenu() {
      let name = await api.users.get({
        user_ids: update.senderId
      })
      
      let res = [ name[0].first_name + ", —Ä–∞–∑–¥–µ–ª—ã –º–∞–≥–∞–∑–∏–Ω–∞:", "" ]
      
      for (let group in data) {
        res.push(data[group].icon + " " + data[group].name + ":")
        
        for (let item of data[group].items) {
          res.push("‚†Ä‚†Ä" + item.icon + " " + item.name)
        }
        
        res.push("")
      }
      
      return update.send(res.join("\n"))
    }
    
    async function sendCategory(category) {
      let name = await api.users.get({
        user_ids: update.senderId
      })
      
      let res = [ name[0].first_name + ", —Ä–∞–∑–¥–µ–ª '" + category + "':", "" ]
      
      category = categories[category].items
      
      for (let i = 0; i < category.length; i++) {
        res.push((i + 1) + ") " + category[i].icon + " " + category[i].name + " - " + category[i].price + "T")
      }
      
      res.push("")
      res.push("–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ '–∫—É–ø–∏—Ç—å', —Ä–∞–∑–¥–µ–ª –∏ –Ω–æ–º–µ—Ä:")
      res.push("/shop buy –æ–¥–µ–∂–¥–∞ 3")
      
      return update.send(res.join("\n"))
    }
    
    async function sendBuyMenu() {
      let name = await api.users.get({
        user_ids: update.senderId,
        name_case: "gen"
      })
      
      let user = await coins.data(update.senderId)
      
      console.log("func", user)
      
      if (!user.items) {
        user.items = []
        coins.setData(update.senderId, user)
      }
      
      console.log("2 func", user)
      
      let category = categories[args[1]].path
      let cIndex = categories[args[1]].index
      let item = parseInt(args[2])
      
      if (!category) return update.send("üòñ –¢—ã –Ω–µ –≤–≤–µ–ª –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
      if (category && !item) return update.send("üòï –¢—ã –Ω–µ –≤–≤–µ–ª –Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å")
      // console.log(categories)
      
      let i = data[category].items[cIndex].items[item - 1]
      
      user.items.push(i)
      
      await coins.setData(update.senderId, user)
      
      return update.send(`üéâ –¢–µ–ø–µ—Ä—å —É ${name[0].first_name} –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç ${i.name}`) 
    }
    
    function sendSellMenu() {}
    
  } catch (e) {
    handleError(update, e)
  }
}

exports.command = {
  "name": "shop",
  "arguments": false,
  "description": {
    "en": "Go to the supermarket :p",
    "ru": "–°—Ö–æ–¥–∏—Ç—å –≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç :p"
  },
  alias: [
    "—à–æ–ø",
    "–º–∞–≥–∞–∑–∏–Ω",
    "–ª–∞—Ä—ë–∫",
    "–ª–∞—Ä–µ–∫"
  ],
  "group": "shop"
}
